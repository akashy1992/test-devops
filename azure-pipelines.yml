# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
- stage: TerraformValidate
  jobs:
    - job: TerraformValidateJob
      continueOnError: false
      steps:
        - task: PublishPipelineArtifact@1
          displayName: Publish Artifacts
          inputs:
            targetPath: '$(System.DefaultWorkingDirectory)'
            artifact: 'quickmailweb-terraform-manifests-out'
            publishLocation: 'pipeline'

- stage: DeployAKSClusters
  jobs:
    - deployment: DeployDevAKSCluster
      displayName: DeployDevAKSCluster
      pool:
        vmImage: 'ubuntu-latest'
      environment: dev      
      strategy:
        runOnce:
          deploy:
            steps:
            - task: TerraformCLI@0
              inputs:
                command: 'init'
                allowTelemetryCollection: false
                workingDirectory: '$(Pipeline.Workspace)'
            - task: TerraformCLI@0
              inputs:
                command: 'plan'
                allowTelemetryCollection: false
                workingDirectory: '$(Pipeline.Workspace)'
            - task: TerraformCLI@0
              inputs:
                command: 'apply'
                allowTelemetryCollection: true
                workingDirectory: '$(Pipeline.Workspace)'
            - task: TerraformCLI@0
              inputs:
                command: 'output'
                allowTelemetryCollection: false
                workingDirectory: '$(Pipeline.Workspace)'
            - bash: |
                echo 'some_string is $(TF_OUT_quickmail_resource_group)'        
                echo 'some_sensitive_string is $(TF_OUT_quickmail_resource_group_2)'
            - script: echo $(System.AccessToken) | az devops login
              env:
                AZURE_DEVOPS_CLI_PAT: $(System.AccessToken)
              displayName: 'Login Azure DevOps Extension'
            - script: az devops configure --defaults organization=https://dev.azure.com/strategycompass project="QuickMail" --use-git-aliases true
              displayName: 'Set default Azure DevOps organization and project'
            - bash: |
                 az pipelines variable-group variable update --group-id 2 --name pass value $(TF_OUT_quickmail_resource_group_2) --secret false --organization https://dev.azure.com/akashyadav1992 --project "AzureAutomation"
              displayName: 'Update Variable Group'
